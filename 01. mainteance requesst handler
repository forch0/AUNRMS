# forms.py
from django import forms
from .models import MaintenanceRequest

class MaintenanceRequestForm(forms.ModelForm):
    class Meta:
        model = MaintenanceRequest
        fields = ['dorm', 'room', 'description', 'category', 'sub_category']

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['sub_category'].widget.attrs['disabled'] = True  # Disable sub_category initially


<!-- maintenance_request_form.html -->
<form method="POST" id="maintenance-request-form">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Submit Request</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categoryField = document.getElementById('id_category');
        const subCategoryField = document.getElementById('id_sub_category');

        const subCategoryOptions = {
            'Electrical': [
                'Power Outages',
                'Flickering Lights',
                'Tripped Circuit Breakers',
                'Outdated Wiring',
                'Non-Functional Outlets'
            ],
            'Plumbing': [
                'Leaky Faucets',
                'Clogged Drains',
                'Running Toilets',
                'Low Water Pressure',
                'Burst Pipes'
            ],
            'Carpentry': [
                'Squeaky Floors',
                'Loose or Damaged Doors',
                'Broken Cabinets',
                'Window Issues',
                'Wall Damage'
            ]
        };

        categoryField.addEventListener('change', function () {
            const selectedCategory = this.value;
            subCategoryField.innerHTML = '';  // Clear current options
            if (subCategoryOptions[selectedCategory]) {
                subCategoryOptions[selectedCategory].forEach(function (subCat) {
                    const option = document.createElement('option');
                    option.value = subCat;
                    option.textContent = subCat;
                    subCategoryField.appendChild(option);
                });
                subCategoryField.removeAttribute('disabled');  // Enable sub_category
            } else {
                subCategoryField.setAttribute('disabled', true);  // Disable if no valid category
            }
        });
    });
</script>



-------------- correct

ELECTRICAL = 'Electrical'
    PLUMBING = 'Plumbing'
    CARPENTRY = 'Carpentry'

    CATEGORY_CHOICES = [
        (ELECTRICAL, 'Electrical'),
        (PLUMBING, 'Plumbing'),
        (CARPENTRY, 'Carpentry'),
        ('Others', 'Others'),
    ]

    ELECTRICAL_SUBCATEGORIES = [
        ('Power Outages', 'Power Outages'),
        ('Bad Sockets', 'Bad Sockets'),
        ('AC Issues', 'AC Issues')
        ('Flickering Lights', 'Flickering Lights'),
        ('Tripped Circuit Breakers', 'Tripped Circuit Breakers'),
        ('Water Heater', 'Water Heater'),
        ('Side Lamps', 'Side Lamps'),
        ('Others', 'Others'),
    ]

    PLUMBING_SUBCATEGORIES = [
        ('Clogged Drains', 'Clogged Drains'),
        ('Running Toilets', 'Running Toilets'),
        ('Low Water Pressure', 'Low Water Pressure'),
        ('Burst Pipes', 'Burst Pipes'),
        ('Water Outage', 'Water Outage')
        ('Others', 'Others'),
    ]

    CARPENTRY_SUBCATEGORIES = [
        ('Loose or Damaged Doors', 'Loose or Damaged Doors'),
        ('Broken Cabinets', 'Broken Cabinets'),
        ('Broken Beds', 'Broken Beds'),
        ('Window Issues', 'Window Issues'),
        ('Others', 'Others'),
    ]
